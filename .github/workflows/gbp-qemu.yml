name: git-buildpackage qemu packaging

on:
  workflow_call:
    secrets:
      GPG_PRIVATE_KEY:
        required: true
    inputs:
      DEBFULLNAME:
        required: true
        type: string
      DEBEMAIL:
        required: true
        type: string
      before_build_deps_install:
        type: string

env:
  DEBFULLNAME: ${{ inputs.DEBFULLNAME }}
  DEBEMAIL: ${{ inputs.DEBEMAIL }}

jobs:

# duplicate build jobs (native vs qemu) may be simpler in the future: https://github.com/uraimo/run-on-arch-action/issues/93
  build-qemu:
    name: ${{ matrix.distro }} ${{ matrix.arch }}
    runs-on: ubuntu-latest

    strategy:
      matrix:
        # TODO: use better distro names once available
        # https://github.com/uraimo/run-on-arch-action/issues/106
        # https://github.com/uraimo/run-on-arch-action/pull/58
        include:
          # avoid 32bit for now:
          # https://github.com/rust-lang/cargo/issues/8719
          # - arch: armv7
          #   distro: ubuntu_latest
          # - arch: armv7
          #   distro: bullseye
          - arch: aarch64
            distro: ubuntu_latest
          # missing mips support?
          # https://github.com/briansmith/ring/issues/562
          # - arch: riscv64
          #   distro: ubuntu_latest
          - arch: aarch64
            distro: bullseye
          # not available yet
          # https://github.com/uraimo/run-on-arch-action/issues/28
          # - arch: riscv64
          #   distro: bullseye

    steps:
      - name: check out
        uses: actions/checkout@v3
        with:
          fetch-depth: 0
          path: source
      - name: place files
        run: |
          echo "${{ secrets.GPG_PRIVATE_KEY }}" > signing-key.priv
          echo "${{ inputs.before_build_deps_install }}" > before_build_deps_install.sh
      - name: build deb
        uses: uraimo/run-on-arch-action@v2
        with:
          arch: ${{ matrix.arch }}
          distro: ${{ matrix.distro }}
          githubToken: ${{ github.token }}
          env: |
            DEBFULLNAME: "${{ env.DEBFULLNAME }}"
            DEBEMAIL: "${{ env.DEBEMAIL }}"
          dockerRunArgs: |
            --volume "${PWD}:/work"
          install: |
            # https://github.com/actions/runner-images/issues/675
            echo 'Acquire::Retries "3";' | tee /etc/apt/apt.conf.d/99ci

            # add backports where missing and install latest git
            # https://github.com/actions/checkout/issues/126
            apt-get update
            apt-get install -y lsb-release
            DISTCODENAME=$(lsb_release -c -s)
            grep -qE "^deb.*$DISTCODENAME-backports main" /etc/apt/sources.list || grep -E "^deb.*$DISTCODENAME main" /etc/apt/sources.list | sed "s/$DISTCODENAME main/$DISTCODENAME-backports main/" | tee -a /etc/apt/sources.list
            apt-get update
            apt-get -t $DISTCODENAME-backports install -y git

            apt-get install -y debhelper-compat git-buildpackage equivs dpkg-sig
          run: |
            git config --global user.name "${DEBFULLNAME}"
            git config --global user.email "${DEBEMAIL}"
            git config --global --add safe.directory /work/source

            pushd /work

            gpg --import signing-key.priv
            rm signing-key.priv

            DISTCODENAME=$(lsb_release -c -s)

            bash before_build_deps_install.sh
            rm before_build_deps_install.sh

            # install build depends and remove resulting clutter
            mk-build-deps -i -r source/debian/control -t "apt-get -y -o Debug::pkgProblemResolver=yes --no-install-recommends --yes"
            rm -f *.deb *.buildinfo *.changes

            pushd source

            PARENTVERSION=$(dpkg-parsechangelog --show-field Version)
            dch -b -D "${DISTCODENAME}" -v "${PARENTVERSION}~${DISTCODENAME}" "Release for ${DISTCODENAME}"
            git add .
            git commit -m "Update changelog for $(dpkg-parsechangelog --show-field Version) release"

            gbp buildpackage -B --git-export-dir=.. --git-ignore-branch

            popd

            dpkg-sig -s builder *.deb

            popd
      - name: upload artifacts
        uses: actions/upload-artifact@v3
        with:
          name: results-${{ matrix.distro }}-${{ matrix.arch }}
          retention-days: 1
          path: |
            *.buildinfo
            *.changes
            *.ddeb
            *.deb
            *.dsc
            *.tar*
